// lexer write in curly bracket, define the token.
// use r"" to represent a regex match
// use "" to represent a directly match
// tokens' definition has to be separate by "\n"
// "one Token one Line" 
%lexer% {
    ID = r"[A-Za-z_][A-Za-z0-9_]*"
    NUMBER = r"[0-9]+"
    STR = r"(['\"])([^\1\\]|\\.)*?\1"
}

// this is a comment
%grammar%  // Comments can be at the end of a line
{
    file ::= ID "=" expr

    expr ::= term (("+" | "-") term)*

    term ::= factor (("*"|"/") factor ) *

    factor ::= ID
             | NUMBER
             | "(" expr ")"
}